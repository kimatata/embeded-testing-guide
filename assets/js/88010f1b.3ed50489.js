"use strict";(self.webpackChunkguide=self.webpackChunkguide||[]).push([[905],{6122:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>u,toc:()=>c});var r=n(4848),o=n(8453);const s={sidebar_position:3},a="State-based Testing",u={id:"patterns/state-based",title:"State-based Testing",description:"This method verifies the state after the code under test is executed. State-based testing is useful when the code manages internal state. It is especially appropriate when state transitions occur, such as in the management of counters, buffers, and flags in embedded software.",source:"@site/docs/patterns/state-based.md",sourceDirName:"patterns",slug:"/patterns/state-based",permalink:"/embeded-testing-guide/docs/patterns/state-based",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/patterns/state-based.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Output-based Testing",permalink:"/embeded-testing-guide/docs/patterns/output-based"},next:{title:"Communication-Based Testing",permalink:"/embeded-testing-guide/docs/patterns/communication-based"}},i={},c=[];function d(e){const t={code:"code",h1:"h1",header:"header",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"state-based-testing",children:"State-based Testing"})}),"\n",(0,r.jsx)(t.p,{children:"This method verifies the state after the code under test is executed. State-based testing is useful when the code manages internal state. It is especially appropriate when state transitions occur, such as in the management of counters, buffers, and flags in embedded software."}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.img,{alt:"State-based Testing",src:n(5948).A+""})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-c",metastring:'title="production code couter.h"',children:"#ifndef COUNTER_H\n#define COUNTER_H\n\ntypedef struct {\n    uint32_t value;\n    uint32_t overflowCount;\n} Counter;\n\nvoid Counter_Init(Counter *counter);\nvoid Counter_Update(Counter *counter);\nuint32_t Counter_GetValue(Counter *counter);\nuint32_t Counter_GetOverflowCount(Counter *counter);\n\n#endif // COUNTER_H\n"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-c",metastring:'title="production code couter.c"',children:'#include "counter.h"\n\nvoid Counter_Init(Counter *counter) {\n    counter->value = 0;\n    counter->overflowCount = 0;\n}\n\nvoid Counter_Update(Counter *counter) {\n    counter->value++;\n\n    // when overflows\n    if (counter->value == 0) {\n        counter->overflowCount++;\n    }\n}\n\nuint32_t Counter_GetValue(Counter *counter) {\n    return counter->value;\n}\n\nuint32_t Counter_GetOverflowCount(Counter *counter) {\n    return counter->overflowCount;\n}\n'})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-c",metastring:'title="test code testCounter.c"',children:"TEST(Counter, CounterOverflows) {\n    Counter counter;\n    Counter_Init(&counter);\n\n    counter.value = UINT32_MAX - 1;\n    Counter_Update(&counter);\n    EXPECT_EQ(Counter_GetValue(&counter), UINT32_MAX);\n    EXPECT_EQ(Counter_GetOverflowCount(&counter), 0);\n\n    // trigger overflow\n    Counter_Update(&counter);\n    EXPECT_EQ(Counter_GetValue(&counter), 0);\n    EXPECT_EQ(Counter_GetOverflowCount(&counter), 1); // overflow count will be 1\n}\n"})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},5948:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/state-based-8fd282fb51d02a88d570cabd2f987ae0.svg"},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>u});var r=n(6540);const o={},s=r.createContext(o);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function u(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:t},e.children)}}}]);